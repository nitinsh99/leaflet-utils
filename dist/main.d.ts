// Generated by dts-bundle v0.5.0

declare module 'ht' {
	export { replay } from "ht/replay";
}

declare module 'ht/replay' {
	import { IReplayStats } from "ht/model";
	import { IReplayHead } from "ht/model";
	export class replay {
		callback: (data: IReplayHead) => void;
		constructor(encodedPolyline?: string, callback?: (data: IReplayHead) => void);
		getStats(): IReplayStats;
		getHead(): IReplayHead;
		setTickInterval(tickInterval: number): void;
		setCallback(callback: (data: IReplayHead) => void): void;
		update(encodedPolyline?: string): void;
		play(): void;
		pause(): void;
		stop(): void;
		gotToTimePercent(timePercent: number): void;
		getTimelineArray(): [number, number, string][];
	}
}

declare module 'ht/model' {
	export interface IPathSegment {
		path: number[][];
		bearing: number;
		style: 'solid' | 'dotted';
	}
	export type ITimeAwarePoint = [number, number, string];
	export interface IReplayHead {
		timePercent: number;
		currentTime: string;
		currentPosition: number[];
		bearing: number;
	}
	export interface IReplayStats {
		start: string;
		end: string;
		duration: number;
		distance?: number;
		timeAwarePolylineArray?: ITimeAwarePoint[];
	}
}

